# this is an auto generated file. This will be overwritten
mutation NewUserInvitation($userInvitation: CreateUserInvitationInput) {
  newUserInvitation(userInvitation: $userInvitation)
}
mutation CreateOrganization(
  $input: CreateOrganizationInput!
  $condition: ModelOrganizationConditionInput
) {
  createOrganization(input: $input, condition: $condition) {
    id
    title
    description
    programs {
      items {
        id
        name
        orgID
        description
        memberships {
          items {
            id
            role
            userId
            programId
            createdAt
            updatedAt
          }
          nextToken
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation UpdateOrganization(
  $input: UpdateOrganizationInput!
  $condition: ModelOrganizationConditionInput
) {
  updateOrganization(input: $input, condition: $condition) {
    id
    title
    description
    programs {
      items {
        id
        name
        orgID
        description
        memberships {
          items {
            id
            role
            userId
            programId
            createdAt
            updatedAt
          }
          nextToken
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation DeleteOrganization(
  $input: DeleteOrganizationInput!
  $condition: ModelOrganizationConditionInput
) {
  deleteOrganization(input: $input, condition: $condition) {
    id
    title
    description
    programs {
      items {
        id
        name
        orgID
        description
        memberships {
          items {
            id
            role
            userId
            programId
            createdAt
            updatedAt
          }
          nextToken
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation CreateProgram(
  $input: CreateProgramInput!
  $condition: ModelProgramConditionInput
) {
  createProgram(input: $input, condition: $condition) {
    id
    name
    orgID
    description
    memberships {
      items {
        id
        role
        userId
        user {
          id
          orgID
          userName
          email
          phone
          firstName
          lastName
          npi
          pgy
          isRater
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        programId
        program {
          id
          name
          orgID
          description
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation UpdateProgram(
  $input: UpdateProgramInput!
  $condition: ModelProgramConditionInput
) {
  updateProgram(input: $input, condition: $condition) {
    id
    name
    orgID
    description
    memberships {
      items {
        id
        role
        userId
        user {
          id
          orgID
          userName
          email
          phone
          firstName
          lastName
          npi
          pgy
          isRater
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        programId
        program {
          id
          name
          orgID
          description
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation DeleteProgram(
  $input: DeleteProgramInput!
  $condition: ModelProgramConditionInput
) {
  deleteProgram(input: $input, condition: $condition) {
    id
    name
    orgID
    description
    memberships {
      items {
        id
        role
        userId
        user {
          id
          orgID
          userName
          email
          phone
          firstName
          lastName
          npi
          pgy
          isRater
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        programId
        program {
          id
          name
          orgID
          description
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation CreateMembership(
  $input: CreateMembershipInput!
  $condition: ModelMembershipConditionInput
) {
  createMembership(input: $input, condition: $condition) {
    id
    role
    userId
    user {
      id
      orgID
      userName
      email
      phone
      firstName
      lastName
      npi
      pgy
      isRater
      memberships {
        items {
          id
          role
          userId
          user {
            id
            orgID
            userName
            email
            phone
            firstName
            lastName
            npi
            pgy
            isRater
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    programId
    program {
      id
      name
      orgID
      description
      memberships {
        items {
          id
          role
          userId
          user {
            id
            orgID
            userName
            email
            phone
            firstName
            lastName
            npi
            pgy
            isRater
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    createdAt
    updatedAt
  }
}
mutation UpdateMembership(
  $input: UpdateMembershipInput!
  $condition: ModelMembershipConditionInput
) {
  updateMembership(input: $input, condition: $condition) {
    id
    role
    userId
    user {
      id
      orgID
      userName
      email
      phone
      firstName
      lastName
      npi
      pgy
      isRater
      memberships {
        items {
          id
          role
          userId
          user {
            id
            orgID
            userName
            email
            phone
            firstName
            lastName
            npi
            pgy
            isRater
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    programId
    program {
      id
      name
      orgID
      description
      memberships {
        items {
          id
          role
          userId
          user {
            id
            orgID
            userName
            email
            phone
            firstName
            lastName
            npi
            pgy
            isRater
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    createdAt
    updatedAt
  }
}
mutation DeleteMembership(
  $input: DeleteMembershipInput!
  $condition: ModelMembershipConditionInput
) {
  deleteMembership(input: $input, condition: $condition) {
    id
    role
    userId
    user {
      id
      orgID
      userName
      email
      phone
      firstName
      lastName
      npi
      pgy
      isRater
      memberships {
        items {
          id
          role
          userId
          user {
            id
            orgID
            userName
            email
            phone
            firstName
            lastName
            npi
            pgy
            isRater
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    programId
    program {
      id
      name
      orgID
      description
      memberships {
        items {
          id
          role
          userId
          user {
            id
            orgID
            userName
            email
            phone
            firstName
            lastName
            npi
            pgy
            isRater
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    createdAt
    updatedAt
  }
}
mutation CreateProcedure(
  $input: CreateProcedureInput!
  $condition: ModelProcedureConditionInput
) {
  createProcedure(input: $input, condition: $condition) {
    id
    name
    description
    programs {
      items {
        id
        procedureId
        procedure {
          id
          name
          description
          programs {
            nextToken
          }
          createdAt
          updatedAt
        }
        programId
        program {
          id
          name
          orgID
          description
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation UpdateProcedure(
  $input: UpdateProcedureInput!
  $condition: ModelProcedureConditionInput
) {
  updateProcedure(input: $input, condition: $condition) {
    id
    name
    description
    programs {
      items {
        id
        procedureId
        procedure {
          id
          name
          description
          programs {
            nextToken
          }
          createdAt
          updatedAt
        }
        programId
        program {
          id
          name
          orgID
          description
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation DeleteProcedure(
  $input: DeleteProcedureInput!
  $condition: ModelProcedureConditionInput
) {
  deleteProcedure(input: $input, condition: $condition) {
    id
    name
    description
    programs {
      items {
        id
        procedureId
        procedure {
          id
          name
          description
          programs {
            nextToken
          }
          createdAt
          updatedAt
        }
        programId
        program {
          id
          name
          orgID
          description
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation CreateUser(
  $input: CreateUserInput!
  $condition: ModelUserConditionInput
) {
  createUser(input: $input, condition: $condition) {
    id
    orgID
    userName
    email
    phone
    firstName
    lastName
    npi
    pgy
    isRater
    memberships {
      items {
        id
        role
        userId
        user {
          id
          orgID
          userName
          email
          phone
          firstName
          lastName
          npi
          pgy
          isRater
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        programId
        program {
          id
          name
          orgID
          description
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation UpdateUser(
  $input: UpdateUserInput!
  $condition: ModelUserConditionInput
) {
  updateUser(input: $input, condition: $condition) {
    id
    orgID
    userName
    email
    phone
    firstName
    lastName
    npi
    pgy
    isRater
    memberships {
      items {
        id
        role
        userId
        user {
          id
          orgID
          userName
          email
          phone
          firstName
          lastName
          npi
          pgy
          isRater
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        programId
        program {
          id
          name
          orgID
          description
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation DeleteUser(
  $input: DeleteUserInput!
  $condition: ModelUserConditionInput
) {
  deleteUser(input: $input, condition: $condition) {
    id
    orgID
    userName
    email
    phone
    firstName
    lastName
    npi
    pgy
    isRater
    memberships {
      items {
        id
        role
        userId
        user {
          id
          orgID
          userName
          email
          phone
          firstName
          lastName
          npi
          pgy
          isRater
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        programId
        program {
          id
          name
          orgID
          description
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation CreateCertificationRecord(
  $input: CreateCertificationRecordInput!
  $condition: ModelCertificationRecordConditionInput
) {
  createCertificationRecord(input: $input, condition: $condition) {
    id
    procedureId
    procedure {
      id
      name
      description
      programs {
        items {
          id
          procedureId
          procedure {
            id
            name
            description
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    isCertified
    certificationMethod
    subjectId
    subject {
      id
      orgID
      userName
      email
      phone
      firstName
      lastName
      npi
      pgy
      isRater
      memberships {
        items {
          id
          role
          userId
          user {
            id
            orgID
            userName
            email
            phone
            firstName
            lastName
            npi
            pgy
            isRater
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    certificationLog {
      items {
        id
        subject {
          id
          orgID
          userName
          email
          phone
          firstName
          lastName
          npi
          pgy
          isRater
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        subjectId
        rater {
          id
          orgID
          userName
          email
          phone
          firstName
          lastName
          npi
          pgy
          isRater
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        raterId
        procedure {
          id
          name
          description
          programs {
            nextToken
          }
          createdAt
          updatedAt
        }
        procedureId
        evaluationDate
        ratingLevel
        certificationRecordId
        createdAt
        updatedAt
      }
      nextToken
    }
    totalProcedureEvals
    createdAt
    updatedAt
  }
}
mutation UpdateCertificationRecord(
  $input: UpdateCertificationRecordInput!
  $condition: ModelCertificationRecordConditionInput
) {
  updateCertificationRecord(input: $input, condition: $condition) {
    id
    procedureId
    procedure {
      id
      name
      description
      programs {
        items {
          id
          procedureId
          procedure {
            id
            name
            description
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    isCertified
    certificationMethod
    subjectId
    subject {
      id
      orgID
      userName
      email
      phone
      firstName
      lastName
      npi
      pgy
      isRater
      memberships {
        items {
          id
          role
          userId
          user {
            id
            orgID
            userName
            email
            phone
            firstName
            lastName
            npi
            pgy
            isRater
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    certificationLog {
      items {
        id
        subject {
          id
          orgID
          userName
          email
          phone
          firstName
          lastName
          npi
          pgy
          isRater
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        subjectId
        rater {
          id
          orgID
          userName
          email
          phone
          firstName
          lastName
          npi
          pgy
          isRater
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        raterId
        procedure {
          id
          name
          description
          programs {
            nextToken
          }
          createdAt
          updatedAt
        }
        procedureId
        evaluationDate
        ratingLevel
        certificationRecordId
        createdAt
        updatedAt
      }
      nextToken
    }
    totalProcedureEvals
    createdAt
    updatedAt
  }
}
mutation DeleteCertificationRecord(
  $input: DeleteCertificationRecordInput!
  $condition: ModelCertificationRecordConditionInput
) {
  deleteCertificationRecord(input: $input, condition: $condition) {
    id
    procedureId
    procedure {
      id
      name
      description
      programs {
        items {
          id
          procedureId
          procedure {
            id
            name
            description
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    isCertified
    certificationMethod
    subjectId
    subject {
      id
      orgID
      userName
      email
      phone
      firstName
      lastName
      npi
      pgy
      isRater
      memberships {
        items {
          id
          role
          userId
          user {
            id
            orgID
            userName
            email
            phone
            firstName
            lastName
            npi
            pgy
            isRater
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    certificationLog {
      items {
        id
        subject {
          id
          orgID
          userName
          email
          phone
          firstName
          lastName
          npi
          pgy
          isRater
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        subjectId
        rater {
          id
          orgID
          userName
          email
          phone
          firstName
          lastName
          npi
          pgy
          isRater
          memberships {
            nextToken
          }
          createdAt
          updatedAt
        }
        raterId
        procedure {
          id
          name
          description
          programs {
            nextToken
          }
          createdAt
          updatedAt
        }
        procedureId
        evaluationDate
        ratingLevel
        certificationRecordId
        createdAt
        updatedAt
      }
      nextToken
    }
    totalProcedureEvals
    createdAt
    updatedAt
  }
}
mutation CreateProgramProcedure(
  $input: CreateProgramProcedureInput!
  $condition: ModelProgramProcedureConditionInput
) {
  createProgramProcedure(input: $input, condition: $condition) {
    id
    procedureId
    procedure {
      id
      name
      description
      programs {
        items {
          id
          procedureId
          procedure {
            id
            name
            description
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    programId
    program {
      id
      name
      orgID
      description
      memberships {
        items {
          id
          role
          userId
          user {
            id
            orgID
            userName
            email
            phone
            firstName
            lastName
            npi
            pgy
            isRater
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    createdAt
    updatedAt
  }
}
mutation UpdateProgramProcedure(
  $input: UpdateProgramProcedureInput!
  $condition: ModelProgramProcedureConditionInput
) {
  updateProgramProcedure(input: $input, condition: $condition) {
    id
    procedureId
    procedure {
      id
      name
      description
      programs {
        items {
          id
          procedureId
          procedure {
            id
            name
            description
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    programId
    program {
      id
      name
      orgID
      description
      memberships {
        items {
          id
          role
          userId
          user {
            id
            orgID
            userName
            email
            phone
            firstName
            lastName
            npi
            pgy
            isRater
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    createdAt
    updatedAt
  }
}
mutation DeleteProgramProcedure(
  $input: DeleteProgramProcedureInput!
  $condition: ModelProgramProcedureConditionInput
) {
  deleteProgramProcedure(input: $input, condition: $condition) {
    id
    procedureId
    procedure {
      id
      name
      description
      programs {
        items {
          id
          procedureId
          procedure {
            id
            name
            description
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    programId
    program {
      id
      name
      orgID
      description
      memberships {
        items {
          id
          role
          userId
          user {
            id
            orgID
            userName
            email
            phone
            firstName
            lastName
            npi
            pgy
            isRater
            createdAt
            updatedAt
          }
          programId
          program {
            id
            name
            orgID
            description
            createdAt
            updatedAt
          }
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    createdAt
    updatedAt
  }
}
